[metadata]
name = melhousing
version = 1.0
author = JoshuaPhuongLe
author_email = phuonglevu3112@gmail.com
description = A small example package for Melbourne housing data set
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/joshuavaple/melhousing
classifiers =
    Programming Language :: Python :: 3
    Operating System :: OS Independent
license_files = LICENSE.txt


# for src layout:
# ├── src
# │   └── mypackage
# │       ├── __init__.py
# │       └── mod1.py
# ├── setup.py
# └── setup.cfg

# [options]
# package_dir=
#     =src
# packages=find:

# [options.packages.find]
# where=src

# method 1:
# this does not work as intended:
# egg file will be inside melhousing folder
# top_level.txt will not be melhousing but the child packages of melhousing
# main2.py script will work, but we want melhousing. as the package prefix for everything
# [options]
# packages = find:
# package_dir =
#     = melhousing
# [options.packages.find]
# where = melhousing
# include = *

# method 2:
# this does not work:
# top_level.txt will be melhousing but 
# it will also detect the other packages in the same folder
# and the installation will fail 
# error: package directory 'melhousing/melhousing' does not exist
# [options]
# packages = find:
# package_dir =
#     = melhousing

# method 3:
# this does not work:
# DuplicateSectionError: While reading from 'setup.cfg' [line 53]: section 'options' already exists
# [options]
# packages = find:
# [options.packages.find]
# include = melhousing

# method 4: 
# this does not work as intended - same as method 1
# egg file will be inside melhousing folder
# top_level.txt will not be melhousing but the child packages of melhousing
# [options]
# package_dir =
#     = melhousing
# packages = find:

# [options.packages.find]
# where = melhousing


# method 5: THIS WORKS - direct translation from setup.py, there is no `where` arg
# simply this means: inside the root folder, find package named melhousing only
# "If your packages are not in the root of the repository you also need to configure package_dir"
# the package we want is inside root, so this is not needed

[options]
packages = find:

[options.packages.find]
include = melhousing

# package_dir is only needed when specific subpackages are chosen to be inside melhousing
# in this case, `package_dir` and `where` take the same argument of `melhousing`
# e.g., only the subpackage `classes` is to be installed:
# [options]
# packages = find:
# package_dir =
#     =melhousing

# [options.packages.find]
# where = melhousing
# include = classes